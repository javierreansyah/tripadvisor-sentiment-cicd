version: "3.8"

services:
  gradio-app:
    build:
      context: .
      dockerfile: App/Dockerfile
    container_name: gradio_ui
    ports:
      - "7860:7860"
    volumes:
      - ./Model:/app/Model
    env_file:
      - .env
    restart: unless-stopped

  # --- UNIFIED FastAPI Monitoring and Serving App ---
  fastapi-app:
    build:
      context: ./FastAPI
    container_name: fastapi_metrics_api
    ports:
      - "8000:8000"
    # Add env_file to load the .env file
    env_file:
      - .env
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
    volumes:
      - ./Data:/app/Data
      - ./.dvc:/app/.dvc
      - ./.git:/app/.git
      - ./Data/.gitignore:/app/Data/.gitignore
      - ./Data/data.csv.dvc:/app/Data/data.csv.dvc
    restart: unless-stopped
    depends_on:
      - mlflow

  prometheus:
    image: prom/prometheus:main
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    depends_on:
      - fastapi-app
    restart: unless-stopped

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped

  db:
    image: postgres:13
    container_name: mlflow_db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=mlflow_user
      - POSTGRES_PASSWORD=mlflow_password
      - POSTGRES_DB=mlflow_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  minio:
    image: minio/minio:latest
    container_name: mlflow_minio
    restart: unless-stopped
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data

  mlflow:
    build:
      context: .
      dockerfile: MLFlow/Server/Dockerfile
    container_name: mlflow_server
    restart: unless-stopped
    ports:
      - "5001:5000"
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
    command: >
      mlflow server
      --backend-store-uri postgresql://mlflow_user:mlflow_password@db:5432/mlflow_db
      --default-artifact-root s3://mlflow/
      --host 0.0.0.0
    depends_on:
      - db
      - minio

  training-runner:
    build:
      context: .
      dockerfile: MLFlow/Dockerfile
    container_name: training_runner
    # The command is now to run the FastAPI server with Uvicorn
    command: ["uvicorn", "MLFlow.app:app", "--host=0.0.0.0", "--port=5002"]
    ports:
      - "5002:5002" # Expose the port so the orchestrator can call it
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
    volumes:
      - ./MLFlow:/app/MLFlow
      - ./Data:/app/Data
      - ./Results:/app/Results
    depends_on:
      - mlflow

  # The separate model-server service has been REMOVED

volumes:
  grafana-storage: {}
  postgres-data: {}
  minio-data: {}
  prometheus-data: {}
